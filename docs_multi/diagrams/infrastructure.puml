@startuml infrastructure
'====================================================================
' Style
'====================================================================
skinparam rectangle {
  BackgroundColor<<edge>>        White
  BackgroundColor<<lb>>          LightSkyBlue # load-balancer
  BackgroundColor<<k8sstd>>      HoneyDew        # cluster standard
  BackgroundColor<<k8spci>>      LightYellow      # cluster PCI-DSS
  BackgroundColor<<dbstd>>       Beige
  BackgroundColor<<dbpci>>       Wheat
  BorderColor     Black
  RoundCorner     15
}
skinparam componentStyle rectangle
skinparam shadowing false

'====================================================================
' Actors & Edge
'====================================================================
actor Client
cloud "Akamai\n(WAF / Anti-DDoS)" as AKAMAI <<edge>>

'====================================================================
' On-prem DC – réseau standard
'====================================================================
node "On-prem DC" {
  frame "DMZ / Std zone" {
    rectangle "Load Balancer Std" as LB_STD <<lb>>
  }
  frame "Réseau interne – Cluster Std" {
    rectangle "Kubernetes Std\n(control-plane + workers)" as K8S_STD <<k8sstd>>
    database "DB Std" as DB_STD <<dbstd>>
  }
}

'====================================================================
' On-prem DC – zone PCI-DSS
'====================================================================
node "On-prem DC\n(PCI-DSS segmented)" {
  frame "DMZ / PCI-DSS" {
    rectangle "Load Balancer PCI" as LB_PCI <<lb>>
  }
  frame "Réseau PCI – Cluster PCI" {
    rectangle "Kubernetes PCI\n(control-plane + workers)" as K8S_PCI <<k8spci>>
    database "DB PCI" as DB_PCI <<dbpci>>
  }
}

'====================================================================
' CI/CD & Registry (hors DC)
'====================================================================
cloud "CI/CD\n(GitHub Actions)" as CICD
cloud "Container Registry\n(Artifact Registry)" as REG

'====================================================================
' Flows
'====================================================================
Client  --> AKAMAI : HTTPS 443
AKAMAI  --> LB_STD : HTTPS 443
AKAMAI  --> LB_PCI : HTTPS 443  # Paiement

LB_STD  --> K8S_STD : HTTP 8080  # Ingress-controller
LB_PCI  --> K8S_PCI : HTTP 8443  # Ingress-controller (mutual TLS)

K8S_STD --> DB_STD  : 5432/tcp
K8S_PCI --> DB_PCI  : 5432/tcp (encrypted)

CICD --> REG : docker push
CICD --> K8S_STD : kubectl / helm deploy
CICD --> K8S_PCI : kubectl / helm deploy (approval gate)

@enduml
